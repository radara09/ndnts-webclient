const DEFAULT_MTU = 1200;
/**
 * Low-level transport.
 *
 * The transport understands NDN TLV structures, but does not otherwise concern with packet format.
 */
export class Transport {
    attributes;
    constructor(attributes) {
        this.attributes = attributes;
    }
    /**
     * Return the transport MTU, if known.
     * The transport should be able to send TLV structure of up to this size.
     */
    get mtu() { return DEFAULT_MTU; }
    /**
     * Reopen the transport after it has failed.
     * @returns the same transport or a new transport after it has been reconnected.
     */
    reopen() {
        return Promise.reject(new Transport.ReopenNotSupportedError());
    }
    toString() {
        /* c8 ignore next */
        return this.attributes.describe ?? this.constructor.name;
    }
}
(function (Transport) {
    /**
     * Error thrown by transport.reopen() to indicate that reopen operation is not supported.
     * No further reopen() will be attempted.
     */
    class ReopenNotSupportedError extends Error {
        constructor() {
            super("reopen not supported");
        }
    }
    Transport.ReopenNotSupportedError = ReopenNotSupportedError;
})(Transport || (Transport = {}));
