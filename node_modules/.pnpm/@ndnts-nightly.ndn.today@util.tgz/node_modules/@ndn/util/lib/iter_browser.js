/** Yield all values from an iterable but catch any error. */
export async function* safeIter(iterable, onError) {
    try {
        yield* iterable;
    }
    catch (err) {
        onError?.(err);
    }
}
/**
 * Map and flatten once.
 * This differs from flatMap in streaming-iterables, which recursively flattens the result.
 */
export async function* flatMapOnce(f, iterable) {
    for await (const item of iterable) {
        yield* f(item);
    }
}
