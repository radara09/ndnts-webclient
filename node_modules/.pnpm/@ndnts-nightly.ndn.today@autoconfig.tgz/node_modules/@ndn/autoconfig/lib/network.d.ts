import type { FwFace } from "@ndn/fw";
import { type FchRequest } from "./fch.js";
import { type ConnectRouterOptions } from "./router.js";
export interface ConnectNetworkOptions extends ConnectRouterOptions {
    /**
     * FCH request.
     *
     * Default is requesting 4 routers.
     * Pass false to disable FCH.
     */
    fch?: FchRequest | false;
    /**
     * Whether to try HTTP/3 before all other options.
     * Default is false.
     * Ignored if H3Transport is not enabled or supported.
     */
    preferH3?: boolean;
    /** Consider default IPv4 gateway as a candidate. */
    tryDefaultGateway?: boolean;
    /** Fallback routers, used if FCH and default gateway are both unavailable. */
    fallback?: string[];
    /**
     * Number of faces to keep; others are closed.
     * Faces are ranked by shortest testConnection duration.
     * Default is 1.
     */
    fastest?: number;
}
/** Connect to an NDN network. */
export declare function connectToNetwork(opts?: ConnectNetworkOptions): Promise<FwFace[]>;
