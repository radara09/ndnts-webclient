import { KeyMap, KeyMultiMap, KeyMultiSet } from "@ndn/util";
function keyOf(nameOrHex) {
    return typeof nameOrHex === "string" ? nameOrHex : nameOrHex.valueHex;
}
/**
 * Map keyed by name.
 * Lookups may accept either name or name.valueHex.
 */
export class NameMap extends KeyMap {
    constructor() {
        super(keyOf);
    }
}
/**
 * MultiMap keyed by name.
 * Lookups may accept either name or name.valueHex.
 */
export class NameMultiMap extends KeyMultiMap {
    constructor() {
        super(keyOf);
    }
}
/**
 * MultiSet keyed by name.
 * Lookups may accept either name or name.valueHex.
 */
export class NameMultiSet extends KeyMultiSet {
    constructor() {
        super(keyOf);
    }
}
