import { toHex } from "@ndn/util";
/**
 * Name longest prefix match algorithm.
 * @param name target name.
 * @param get callback function to retrieve entry by hexadecimal name prefix.
 */
export function* lpm(name, get) {
    const prefixes = [""];
    let s = "";
    for (const comp of name.comps) {
        s += toHex(comp.tlv);
        prefixes.push(s);
    }
    while (prefixes.length > 0) {
        const prefix = prefixes.pop();
        const entry = get(prefix);
        if (entry !== undefined) {
            yield entry;
        }
    }
}
